events {
}
pid nginx.pid;

error_log /var/log/my_website/error.log error;

http {
    log_format request '$remote_addr [$time_iso8601] $http_host "$request" $status $body_bytes_sent $http_referer "$http_user_agent"';
    access_log /var/log/my_website/access.log request;
    client_max_body_size 20M; #https://stackoverflow.com/questions/44741514/nginx-error-client-intended-to-send-too-large-body
    ssl_certificate_key certs/saugau.privkey.pem;
    ssl_certificate certs/saugau.fullchain.pem;
    
    server {
        server_name saugau.com;
        listen 80;
        return 301 https://$server_name$request_uri;
    }
    server {
        server_name saugau.com;
        listen 443 http2 ssl;  
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        access_log /var/log/my_website/website_access.log request;
        error_log /var/log/my_website/website_error.log error;
        location ~ \.mp4 {
            root media;
        }
        location /static/favicon {
            root /opt/my_website/django_my_website/;
        }
        location ~ \.png {
            default_type image/png;
            root /opt/my_website/django_my_website/;
        }
        location ~* \.(jpeg|jpg)$ {
            default_type image/jpeg;
            root /opt/my_website/django_my_website/;
        }
        location ~ \.webp {
            root /opt/my_website/django_my_website/;
            default_type image/webp;
        }
        location /robots.txt {return 200 "User-agent: *\nDisallow:\n";}
        location / {
            proxy_pass http://host.docker.internal:8000;
        }
    }

    server {
        listen 80 default_server;
        server_name _;
        location / {
            return 200 "Why are you here?";
        }
    }

    server {
        ssl_certificate_key certs/wildcard.saugau.privkey.pem;
        ssl_certificate certs/wildcard.saugau.fullchain.pem;
        listen 443 http2 ssl;
        server_name grafana.saugau.com;
        location / {
            proxy_pass http://localhost:3000;
        }
    }
    server {
                ssl_certificate_key certs/wildcard.saugau.privkey.pem;
        ssl_certificate certs/wildcard.saugau.fullchain.pem;
        listen 443 http2 ssl;
        server_name ai.saugau.com;
        location / {
            proxy_pass http://34.28.167.137:6006;
        }
    }
}